UCS PowerTool script that checks the current bandwidth of all adapters in a domain.  For best results make sure that the collection interval is set to 30 seconds (set in the admin tab). 
 
Out put looks like:
...
Blade:  sys/chassis-1/blade-2
Service Profile:  org-root/ls-ESXi-1000v-01
        Vnic:  ether-Management-A  Tx:  0.000 Mbps / Rx:  0.000 Mbps
        Vnic:  ether-Management-B  Tx:  0.011 Mbps / Rx:  0.001 Mbps
        Vnic:  ether-N1kv-A  Tx:  0.000 Mbps / Rx:  0.010 Mbps
        Vnic:  ether-N1kv-B  Tx:  0.002 Mbps / Rx:  0.013 Mbps
        Vnic:  ether-Storage-A  Tx:  0.000 Mbps / Rx:  0.001 Mbps
        Vnic:  ether-Storage-B  Tx:  2.233 Mbps / Rx:  25.363 Mbps
        Vnic:  ether-VM-A  Tx:  0.127 Mbps / Rx:  2.341 Mbps
        Vnic:  ether-VM-B  Tx:  0.019 Mbps / Rx:  0.014 Mbps
        Vnic:  ether-vMotion-A  Tx:  0.000 Mbps / Rx:  0.000 Mbps
        Vnic:  ether-vMotion-B  Tx:  0.000 Mbps / Rx:  0.000 Mbps
...
 
I use the math on my blog entry I wrote on this to convert to Mbps:
http://benincosa.com/blog/?p=622


https://communities.cisco.com/docs/DOC-37173




# (c) vbeninco@cisco.com
# 
# Get Packets (bytes/30seconds) going in and out of blades
# Note:  Please make sure your collection policy is set to collect every 30 seconds.
# Get the parameters 
param(	[string]$server = "10.93.234.241",
	[string]$user = "admin",
	[string]$passwd = "Cisco.123"
)

# make sure we have the Cisco module imported
# TODO check that its not already included.
Import-Module CiscoUCSPS

# take in the password.  
$pass = ConvertTo-SecureString $passwd -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential($user, $pass)

# only do one UCS right now... so many places we could improve this.
$handle = Connect-Ucs $server -Credential $cred

# get all the blades in the domain.
$blades = get-UcsBlade

# go through each blade.
foreach($blade in $blades) {
	Write-Host "Blade: "$blade.dn
	if ($blade.association -eq "Associated"){
		$sp = Get-UcsServiceProfile -Dn $blade.assignedToDn
		Write-Host "Service Profile: "$sp.dn
		$vnics = Get-UcsVnic -ServiceProfile $sp
		foreach($vnic in $vnics){
			$stats = Get-UcsAdaptorVnicStats -Dn ($vnic.equipmentdn + "/vnic-stats")
			Write-Host "`tVnic: "$vnic.rn" Tx: "$('{0:N3}' -f ($stats.BytesTxDeltaAvg * 0.000000254))"Mbps / Rx: "$('{0:N3}' -f ($stats.BytesRxDeltaAvg * 0.000000254))"Mbps"
		}
	}
}

Disconnect-UCS
