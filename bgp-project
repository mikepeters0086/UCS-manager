
#!/bin/env python
import pexpect
import sys
import time

command = raw_input("Type command:")
#password = "AMpt157B"
#adduser = "set account name " + username


f = open('ips')
for line in f:
        string = line.replace("\n","")

        if len(command) > 0:
               #login
                login = "ssh -o \"StrictHostKeyChecking no\" checks@"+string
                child = pexpect.spawn (login)
                child.logfile = open("mylog", "w")
                i = child.expect([pexpect.TIMEOUT, '[Pp]assword: '])
                if i == 0:
                        print 'No SSH connection for %s or invalid IP' % (string)

                if i == 1:
                        child.sendline ('AMpt157B')
                        child.expect ('.*#')


                #commands
                        child.sendline('term len 0')
                        child.expect ('.*#')



                        child.sendline(command)
                        child.expect ('.*#')
                        time.sleep(5)
                        print child.after


                        time.sleep(5)
                        child.sendline('exit')

                        print "Login Successfull"

        else:

                print "Your input is empty...TRY AGAIN"

f.close()


otr="<tr>"
ctr="<tr>"
otd="<td>"
ctd="</td>"
tblo= "<table>"
tblc= "</table>"
otrbg = "<tr style=\"background-color=#c4c8ce\">"
otd_red = "<td bgcolor=Red>"
otd_green = "<td bgcolor=Lime>"

print tblo

print otrbg+otd+"Neighbor"+ctd+ \
      otd+"ASN"+ctd+\
      otd+"Flaps"+ctd+\
      otd+"uptime"+ctd+ctr

var = "\d[0-9]{1,2}:\d[0-9]{1,2}:\d[0-9]{1,2}"

file = open('mylog')
for line in file:
        string = line.replace("\n","")
        if (re.match('[\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}]|VRF',string)):
                bgp_session = string.replace("|", " ").replace(",","")

                print otr+otd+bgp_session.split()[0]+ctd,
                print otd+bgp_session.split()[1]+ctd,
                print otd+bgp_session.split()[2]+ctd,
                if (re.match('[0-9]{1,2}:\d[0-9]{1,2}:\d[0-9]{1,2}',bgp_session.split()[3])):
                        print ("%s") % (otd_red+bgp_session.split()[3]+ctd+ctr)
                else:
                        print ("%s") % (otd_green+bgp_session.split()[3]+ctd+ctr)

print tblc
f.close()
